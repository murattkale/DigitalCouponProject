// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Services.Migrations
{
    [DbContext(typeof(myDBContext))]
    [Migration("20230508010439_dbgh1")]
    partial class dbgh1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconDiomand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFavorite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconGold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconMain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconSilver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("BusinessTypeMemberShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("MemberShipId");

                    b.ToTable("BusinessTypeMemberShip");
                });

            modelBuilder.Entity("BusinessTypePartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("BusinessTypePartner");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BannerButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContentOrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ContentShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentTypes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsClick")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFooterMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGallery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHamburgerMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeaderMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSideMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("OrjId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrjId");

                    b.HasIndex("ParentId");

                    b.ToTable("ContentPage");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CouponType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InfoText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("CouponMemberShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("MemberShipId");

                    b.ToTable("CouponMemberShip");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BannerImageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("GalleryId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("PictureId")
                        .HasColumnType("int");

                    b.Property<int?>("ThumbImageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_class")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BannerImageId")
                        .IsUnique()
                        .HasFilter("[BannerImageId] IS NOT NULL");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GalleryId");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("ThumbImageId")
                        .IsUnique()
                        .HasFilter("[ThumbImageId] IS NOT NULL");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Lang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lang");
                });

            modelBuilder.Entity("LangDisplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LangDisplay");
                });

            modelBuilder.Entity("LangText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ContentPageId")
                        .HasColumnType("int");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LangDisplayId")
                        .HasColumnType("int");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("TextDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("ContentPageId");

                    b.HasIndex("CouponId");

                    b.HasIndex("LangDisplayId");

                    b.HasIndex("LangId");

                    b.HasIndex("MemberShipId");

                    b.HasIndex("PartnerId");

                    b.ToTable("LangText");
                });

            modelBuilder.Entity("MemberShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BackColor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BackColor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceEuro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceTR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ValidMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MemberShip");
                });

            modelBuilder.Entity("Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActiveMonths")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessLegalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("ExecutiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsPopuler")
                        .HasColumnType("bit");

                    b.Property<int>("IsState")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Partner");
                });

            modelBuilder.Entity("PartnerCoupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerCoupon");
                });

            modelBuilder.Entity("PartnerDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerDocument");
                });

            modelBuilder.Entity("SiteConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Android_Current")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Android_Min")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ios_Current")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ios_Min")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsMaintenance")
                        .HasColumnType("bit");

                    b.Property<string>("JokerPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailGorunenAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MaintenanceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MaintenanceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDocumentSize")
                        .HasColumnType("int");

                    b.Property<int?>("MaxImageSize")
                        .HasColumnType("int");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpMailPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SmtpSsl")
                        .HasColumnType("bit");

                    b.Property<string>("StartAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutUrlBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteConfig");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<int>("DeviceState")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsState")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCKN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PartnerId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UserCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberShipId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCard");
                });

            modelBuilder.Entity("UserCoupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCoupon");
                });

            modelBuilder.Entity("UserMemberShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberShipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberShipId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMemberShip");
                });

            modelBuilder.Entity("UserPartnerFavorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPartnerFavorites");
                });

            modelBuilder.Entity("BusinessType", b =>
                {
                    b.HasOne("BusinessType", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BusinessTypeMemberShip", b =>
                {
                    b.HasOne("BusinessType", "BusinessType")
                        .WithMany("BusinessTypeMemberShip")
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MemberShip", "MemberShip")
                        .WithMany("BusinessTypeMemberShip")
                        .HasForeignKey("MemberShipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("MemberShip");
                });

            modelBuilder.Entity("BusinessTypePartner", b =>
                {
                    b.HasOne("BusinessType", "BusinessType")
                        .WithMany("BusinessTypePartner")
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Partner", "Partner")
                        .WithMany("BusinessTypePartner")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.HasOne("Country", "Country")
                        .WithMany("City")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.HasOne("ContentPage", "Orj")
                        .WithMany("OrjChild")
                        .HasForeignKey("OrjId");

                    b.HasOne("ContentPage", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Orj");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CouponMemberShip", b =>
                {
                    b.HasOne("Coupon", "Coupon")
                        .WithMany("CouponMemberShip")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MemberShip", "MemberShip")
                        .WithMany("CouponMemberShip")
                        .HasForeignKey("MemberShipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("MemberShip");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.HasOne("ContentPage", "BannerImage")
                        .WithOne("BannerImage")
                        .HasForeignKey("Documents", "BannerImageId");

                    b.HasOne("ContentPage", "Document")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentId");

                    b.HasOne("ContentPage", "Gallery")
                        .WithMany("Gallery")
                        .HasForeignKey("GalleryId");

                    b.HasOne("ContentPage", "Picture")
                        .WithOne("Picture")
                        .HasForeignKey("Documents", "PictureId");

                    b.HasOne("ContentPage", "ThumbImage")
                        .WithOne("ThumbImage")
                        .HasForeignKey("Documents", "ThumbImageId");

                    b.Navigation("BannerImage");

                    b.Navigation("Document");

                    b.Navigation("Gallery");

                    b.Navigation("Picture");

                    b.Navigation("ThumbImage");
                });

            modelBuilder.Entity("LangText", b =>
                {
                    b.HasOne("BusinessType", "BusinessType")
                        .WithMany("LangText")
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("ContentPage", "ContentPage")
                        .WithMany("LangText")
                        .HasForeignKey("ContentPageId");

                    b.HasOne("Coupon", "Coupon")
                        .WithMany("LangText")
                        .HasForeignKey("CouponId");

                    b.HasOne("LangDisplay", "LangDisplay")
                        .WithMany("LangText")
                        .HasForeignKey("LangDisplayId");

                    b.HasOne("Lang", "Lang")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MemberShip", "MemberShip")
                        .WithMany("LangText")
                        .HasForeignKey("MemberShipId");

                    b.HasOne("Partner", "Partner")
                        .WithMany("LangText")
                        .HasForeignKey("PartnerId");

                    b.Navigation("BusinessType");

                    b.Navigation("ContentPage");

                    b.Navigation("Coupon");

                    b.Navigation("Lang");

                    b.Navigation("LangDisplay");

                    b.Navigation("MemberShip");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Partner", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Partner")
                        .HasForeignKey("CityId");

                    b.HasOne("Country", "Country")
                        .WithMany("Partner")
                        .HasForeignKey("CountryId");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PartnerCoupon", b =>
                {
                    b.HasOne("Coupon", "Coupon")
                        .WithMany("PartnerCoupon")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Partner", "Partner")
                        .WithMany("PartnerCoupon")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("PartnerDocument", b =>
                {
                    b.HasOne("Partner", "Partner")
                        .WithMany("PartnerDocument")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("User")
                        .HasForeignKey("CityId");

                    b.HasOne("Country", "Country")
                        .WithMany("User")
                        .HasForeignKey("CountryId");

                    b.HasOne("Partner", "Partner")
                        .WithMany("User")
                        .HasForeignKey("PartnerId");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("UserCard", b =>
                {
                    b.HasOne("MemberShip", "MemberShip")
                        .WithMany("UserCard")
                        .HasForeignKey("MemberShipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserCard")
                        .HasForeignKey("UserId");

                    b.Navigation("MemberShip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserCoupon", b =>
                {
                    b.HasOne("Coupon", "Coupon")
                        .WithMany("UserCoupon")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserCoupon")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserMemberShip", b =>
                {
                    b.HasOne("MemberShip", "MemberShip")
                        .WithMany("UserMemberShip")
                        .HasForeignKey("MemberShipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserMemberShip")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MemberShip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserPartnerFavorites", b =>
                {
                    b.HasOne("Partner", "Partner")
                        .WithMany("UserPartnerFavorites")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserPartnerFavorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Partner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessType", b =>
                {
                    b.Navigation("BusinessTypeMemberShip");

                    b.Navigation("BusinessTypePartner");

                    b.Navigation("Childs");

                    b.Navigation("LangText");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Navigation("Partner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Navigation("BannerImage");

                    b.Navigation("Childs");

                    b.Navigation("Documents");

                    b.Navigation("Gallery");

                    b.Navigation("LangText");

                    b.Navigation("OrjChild");

                    b.Navigation("Picture");

                    b.Navigation("ThumbImage");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Navigation("City");

                    b.Navigation("Partner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Coupon", b =>
                {
                    b.Navigation("CouponMemberShip");

                    b.Navigation("LangText");

                    b.Navigation("PartnerCoupon");

                    b.Navigation("UserCoupon");
                });

            modelBuilder.Entity("LangDisplay", b =>
                {
                    b.Navigation("LangText");
                });

            modelBuilder.Entity("MemberShip", b =>
                {
                    b.Navigation("BusinessTypeMemberShip");

                    b.Navigation("CouponMemberShip");

                    b.Navigation("LangText");

                    b.Navigation("UserCard");

                    b.Navigation("UserMemberShip");
                });

            modelBuilder.Entity("Partner", b =>
                {
                    b.Navigation("BusinessTypePartner");

                    b.Navigation("LangText");

                    b.Navigation("PartnerCoupon");

                    b.Navigation("PartnerDocument");

                    b.Navigation("User");

                    b.Navigation("UserPartnerFavorites");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("UserCard");

                    b.Navigation("UserCoupon");

                    b.Navigation("UserMemberShip");

                    b.Navigation("UserPartnerFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
